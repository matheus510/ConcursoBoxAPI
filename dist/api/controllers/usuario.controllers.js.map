{"version":3,"sources":["../../../src/api/controllers/usuario.controllers.js"],"names":["create","login","findAll","findOne","update","remove","req","res","newUser","nome","body","token","split","hash_password","data","Usuario","save","then","send","catch","status","message","err","headers","queryObj","query","find","exec","usuario","console","log","responseObj","authorized","findById","params","usuarioId","findByIdAndUpdate","new","kind","findByIdAndRemove","name"],"mappings":"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","file":"usuario.controllers.js","sourcesContent":["import Usuario from '../../db/models/usuario.model'\n\nexport function create(req, res) {\n\tlet newUser = {\n\t\tnome: req.body.token.split(\"@\")[0],\n\t\thash_password: req.body.token.split(\"@\")[1],\n\t\ttoken: req.body.token\n\t}\n\tlet data = new Usuario(newUser)\n\tdata.save().then(data => {\n\t\tres.send(data);\n\t}).catch(err => {\n\t\tres.status(500).send({\n\t\t\tmessage: err.message || \"Erro ao criar o concurso.\"\n\t\t})\n\t})\n}\n\nexport function login(req, res) {\n\tconst token = req.headers['authorization'].split(\"@\")\n\tconst queryObj = { \n\t\t'nome': token[0],\n\t\t'hash_password': token[1] \n\t}\n\tconst query = Usuario.find(queryObj)\n\n\tquery.exec(query, function (err, usuario) {\n\t\tif (err) {\n\t\t\t//handle query error\n\t\t\tconsole.log('erro na query')\n\t\t} else {\n\t\t\tconst responseObj = {\n\t\t\t\tauthorized: true,\n\t\t\t\tusuario: usuario[0]\n\t\t\t}\n\t\t\tres.send(responseObj)\n\t\t}\n\t})\n}\n\nexport function findAll(req, res) {\n\tUsuario.find()\n\t.then(data => {\n\t\tres.send(data)\n\t}).catch(err => {\n\t\tres.status(500).send({\n\t\t\tmessage: err.message || \"Erro ao criar o usuario.\"\n\t\t})\n\t})\n}\n\nexport function findOne(req, res) {\n\tUsuario.findById(req.params.usuarioId)\n\t.then(usuario => {\n\t\tif(!usuario) {\n\t\t\treturn res.status(404).send({\n\t\t\t\tmessage: \"usuario not found with id \" + req.params.usuarioId\n\t\t\t})\n\t\t}\n\t})\n}\n\nexport function update(req, res) {\n\tUsuario.findByIdAndUpdate(req.params.usuarioId, req.body, {new: true})\n\t.then(usuario => {\n\t\tif(!usuario) {\n\t\t\treturn res.status(404).send({\n\t\t\t\tmessage: \"usuario not found with id \" + req.params.usuarioId\n\t\t\t})\n\t\t}\n\t\tres.send(usuario)\n\t}).catch(err => {\n\t\tif(err.kind === 'ObjectId') {\n\t\t\treturn res.status(404).send({\n\t\t\t\tmessage: \"usuario not found with id \" + req.params.usuarioId\n\t\t\t})                \n\t\t}\n\t\treturn res.status(500).send({\n\t\t\tmessage: \"Error updating usuario with id \" + req.params.usuarioId\n\t\t})\n\t})\n}\n\nexport function remove (req, res) {\n\tUsuario.findByIdAndRemove(req.params.usuarioId)\n\t.then(usuario => {\n\t\tif(!usuario) {\n\t\t\treturn res.status(404).send({\n\t\t\t\tmessage: \"usuario not found with id \" + req.params.usuarioId\n\t\t\t})\n\t\t}\n\t\tres.send({message: \"usuario deleted successfully!\"})\n\t}).catch(err => {\n\t\tif(err.kind === 'ObjectId' || err.name === 'NotFound') {\n\t\t\treturn res.status(404).send({\n\t\t\t\tmessage: \"usuario not found with id \" + req.params.usuarioId\n\t\t\t})                \n\t\t}\n\t\treturn res.status(500).send({\n\t\t\tmessage: \"Could not delete usuario with id \" + req.params.usuarioId\n\t\t})\n\t})\n}\n"]}